{"version":3,"sources":["components/Feedback/Section/Section.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Notification/Notification.jsx","App.js","index.js","components/Feedback/Section/Section.module.css"],"names":["Section","title","children","className","s","section","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","onClick","Notification","message","App","state","leaveFeedback","e","value","target","innerText","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","sum","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qSAUeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MCOUI,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGR,UAAU,IAAb,mBAAwBI,KACxB,oBAAGJ,UAAU,IAAb,sBAA2BK,KAC3B,oBAAGL,UAAU,IAAb,kBAAuBM,KACvB,oBAAGN,UAAU,IAAb,oBAAyBO,KACzB,oBAAGP,UAAU,IAAb,gCAAqCQ,EAArC,WCOWC,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,sBAAKV,UAAU,IAAf,UACE,wBAAQA,UAAU,IAAIW,KAAK,SAASC,QAASF,EAA7C,kBAGA,wBAAQV,UAAU,IAAIW,KAAK,SAASC,QAASF,EAA7C,qBAGA,wBAAQV,UAAU,IAAIW,KAAK,SAASC,QAASF,EAA7C,qBCLWG,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGd,UAAU,IAAb,SAAkBc,KCIlDC,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,cAAgB,SAACC,GACf,IAAMC,EAAQD,EAAEE,OAAOC,UACT,SAAVF,EACF,EAAKG,UAAS,SAACC,GACb,MAAO,CACLnB,KAAMmB,EAAUnB,KAAO,MAGR,YAAVe,EACT,EAAKG,UAAS,SAACC,GACb,MAAO,CACLlB,QAASkB,EAAUlB,QAAU,MAGd,QAAVc,GACT,EAAKG,UAAS,SAACC,GACb,MAAO,CACLjB,IAAKiB,EAAUjB,IAAM,O,EAM7BkB,mBAAqB,WAMnB,OALiB,EAAKR,MAAdZ,KACY,EAAKY,MAAjBX,QACQ,EAAKW,MAAbV,K,EAMVmB,gCAAkC,WAChC,IAAQrB,EAAS,EAAKY,MAAdZ,KACFsB,EAAM,EAAKF,qBAGjB,OADgBG,KAAKC,KAAa,IAAPxB,EAAcsB,I,4CAY3C,WACE,IAAQtB,EAASyB,KAAKb,MAAdZ,KACAC,EAAYwB,KAAKb,MAAjBX,QACAC,EAAQuB,KAAKb,MAAbV,IACR,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBY,gBAAiBmB,KAAKZ,kBAEzC,cAAC,EAAD,CAASnB,MAAM,aAAf,SACiC,IAA9B+B,KAAKL,qBACJ,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,KAAKL,qBACZhB,mBAAoBqB,KAAKJ,6C,GAzErBK,aAkFHf,ICpFfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.4208d21f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n// import s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p className=\"#\">Good: {good}</p>\r\n    <p className=\"#\">Neutral: {neutral}</p>\r\n    <p className=\"#\">Bad: {bad}</p>\r\n    <p className=\"#\">Total: {total}</p>\r\n    <p className=\"#\">Positive Feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <div className=\"#\">\r\n    <button className=\"#\" type=\"button\" onClick={onLeaveFeedback}>\r\n      Good\r\n    </button>\r\n    <button className=\"#\" type=\"button\" onClick={onLeaveFeedback}>\r\n      Neutral\r\n    </button>\r\n    <button className=\"#\" type=\"button\" onClick={onLeaveFeedback}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\n// import s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => <p className=\"#\">{message}</p>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Section from \"./components/Feedback/Section\";\nimport Statistics from \"./components/Feedback/Statistics\";\nimport FeedbackOptions from \"./components/Feedback/FeedbackOptions\";\nimport Notification from \"./components/Feedback/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (e) => {\n    const value = e.target.innerText;\n    if (value === \"Good\") {\n      this.setState((prevState) => {\n        return {\n          good: prevState.good + 1,\n        };\n      });\n    } else if (value === \"Neutral\") {\n      this.setState((prevState) => {\n        return {\n          neutral: prevState.neutral + 1,\n        };\n      });\n    } else if (value === \"Bad\") {\n      this.setState((prevState) => {\n        return {\n          bad: prevState.bad + 1,\n        };\n      });\n    }\n  };\n\n  countTotalFeedback = () => {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n\n    const sum = good + neutral + bad;\n    return sum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const sum = this.countTotalFeedback();\n\n    const percent = Math.ceil((good * 100) / sum);\n    return percent;\n\n    //____После рендера по условию необходимость в проверке пропала___\n    // if (isNaN(percent)) {\n    //   return 0;\n    // } else {\n    //   return percent;\n    // }\n    //________________________________________________________________\n  };\n\n  render() {\n    const { good } = this.state;\n    const { neutral } = this.state;\n    const { bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.leaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1XjRe\",\"title\":\"Section_title__13Ukm\"};"],"sourceRoot":""}